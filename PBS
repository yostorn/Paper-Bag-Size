function calculatePaperUsage(bagWidth, bagHeight, bagDepth, paperWidth, paperHeight) {
    // คำนวณขนาดกระดาษที่ต้องการสำหรับถุงหนึ่งใบ
    const bagPaperWidth = 2 * bagWidth + 2 * bagDepth + 2;
    const bagPaperHeight = bagHeight + (bagDepth / 2) + 2;

    // คำนวณจำนวนถุงที่สามารถผลิตได้ต่อแผ่น ทั้งแนวตั้งและแนวนอน
    const bagsPerRowVertical = Math.floor(paperWidth / bagPaperWidth);
    const bagsPerColumnVertical = Math.floor(paperHeight / bagPaperHeight);
    const bagsPerSheetVertical = bagsPerRowVertical * bagsPerColumnVertical;

    const bagsPerRowHorizontal = Math.floor(paperWidth / bagPaperHeight);
    const bagsPerColumnHorizontal = Math.floor(paperHeight / bagPaperWidth);
    const bagsPerSheetHorizontal = bagsPerRowHorizontal * bagsPerColumnHorizontal;

    // เลือกการจัดวางที่ให้จำนวนถุงมากที่สุด
    const isVerticalBetter = bagsPerSheetVertical >= bagsPerSheetHorizontal;
    const bagsPerSheet = Math.max(bagsPerSheetVertical, bagsPerSheetHorizontal);

    // คำนวณพื้นที่ที่ใช้และพื้นที่ที่เหลือ
    const usedArea = bagsPerSheet * bagPaperWidth * bagPaperHeight;
    const totalArea = paperWidth * paperHeight;
    const wasteArea = totalArea - usedArea;
    const wastePercentage = (wasteArea / totalArea) * 100;

    return { 
        bagsPerSheet, 
        wastePercentage, 
        bagPaperWidth, 
        bagPaperHeight,
        isVerticalBetter
    };
}

function drawLayoutMaster(canvasId, bagWidth, bagHeight, bagDepth, paperWidth, paperHeight, result) {
    const canvas = document.getElementById(canvasId);
    const ctx = canvas.getContext('2d');
    const scale = Math.min(canvas.width / paperWidth, canvas.height / paperHeight);
    
    // Clear canvas
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    
    // Draw paper sheet
    ctx.strokeStyle = '#000';
    ctx.strokeRect(0, 0, paperWidth * scale, paperHeight * scale);
    
    // Draw bags
    ctx.fillStyle = 'rgba(0, 255, 0, 0.2)';
    ctx.strokeStyle = '#0a0';
    
    let bagsPerRow, bagsPerColumn;
    if (result.isVerticalBetter) {
        bagsPerRow = Math.floor(paperWidth / result.bagPaperWidth);
        bagsPerColumn = Math.floor(paperHeight / result.bagPaperHeight);
    } else {
        bagsPerRow = Math.floor(paperWidth / result.bagPaperHeight);
        bagsPerColumn = Math.floor(paperHeight / result.bagPaperWidth);
    }
    
    for (let i = 0; i < bagsPerColumn; i++) {
        for (let j = 0; j < bagsPerRow; j++) {
            let x, y, width, height;
            if (result.isVerticalBetter) {
                x = j * result.bagPaperWidth * scale;
                y = i * result.bagPaperHeight * scale;
                width = result.bagPaperWidth * scale;
                height = result.bagPaperHeight * scale;
            } else {
                x = j * result.bagPaperHeight * scale;
                y = i * result.bagPaperWidth * scale;
                width = result.bagPaperHeight * scale;
                height = result.bagPaperWidth * scale;
            }
            ctx.fillRect(x, y, width, height);
            ctx.strokeRect(x, y, width, height);
        }
    }
}

function calculate() {
    const bagWidth = parseFloat(document.getElementById('bagWidth').value);
    const bagHeight = parseFloat(document.getElementById('bagHeight').value);
    const bagDepth = parseFloat(document.getElementById('bagDepth').value);
    const paperWidth1 = parseFloat(document.getElementById('paperWidth1').value);
    const paperHeight1 = parseFloat(document.getElementById('paperHeight1').value);
    const paperWidth2 = parseFloat(document.getElementById('paperWidth2').value);
    const paperHeight2 = parseFloat(document.getElementById('paperHeight2').value);

    const result1 = calculatePaperUsage(bagWidth, bagHeight, bagDepth, paperWidth1, paperHeight1);
    const result2 = calculatePaperUsage(bagWidth, bagHeight, bagDepth, paperWidth2, paperHeight2);

    let resultHTML = '<h2>ผลลัพธ์</h2>';
    resultHTML += '<h3>ตัวเลือกที่ 1</h3>';
    resultHTML += `<p>ขนาดกระดาษ: ${paperWidth1} x ${paperHeight1} ซม.</p>`;
    resultHTML += `<p>ขนาดกระดาษต่อถุง: ${result1.bagPaperWidth.toFixed(2)} x ${result1.bagPaperHeight.toFixed(2)} ซม.</p>`;
    resultHTML += `<p>จำนวนถุงต่อแผ่น: ${result1.bagsPerSheet}</p>`;
    resultHTML += `<p>เปอร์เซ็นต์ waste: ${result1.wastePercentage.toFixed(2)}%</p>`;
    resultHTML += `<p>การจัดวาง: ${result1.isVerticalBetter ? 'แนวตั้ง' : 'แนวนอน'}</p>`;
    resultHTML += '<canvas id="canvas1" width="400" height="300"></canvas>';

    resultHTML += '<h3>ตัวเลือกที่ 2</h3>';
    resultHTML += `<p>ขนาดกระดาษ: ${paperWidth2} x ${paperHeight2} ซม.</p>`;
    resultHTML += `<p>ขนาดกระดาษต่อถุง: ${result2.bagPaperWidth.toFixed(2)} x ${result2.bagPaperHeight.toFixed(2)} ซม.</p>`;
    resultHTML += `<p>จำนวนถุงต่อแผ่น: ${result2.bagsPerSheet}</p>`;
    resultHTML += `<p>เปอร์เซ็นต์ waste: ${result2.wastePercentage.toFixed(2)}%</p>`;
    resultHTML += `<p>การจัดวาง: ${result2.isVerticalBetter ? 'แนวตั้ง' : 'แนวนอน'}</p>`;
    resultHTML += '<canvas id="canvas2" width="400" height="300"></canvas>';

    if (result1.wastePercentage < result2.wastePercentage) {
        resultHTML += `<p class="recommendation">ตัวเลือกที่แนะนำ: ตัวเลือกที่ 1 (ขนาด ${paperWidth1} x ${paperHeight1} ซม.) มี waste น้อยกว่า</p>`;
    } else if (result2.wastePercentage < result1.wastePercentage) {
        resultHTML += `<p class="recommendation">ตัวเลือกที่แนะนำ: ตัวเลือกที่ 2 (ขนาด ${paperWidth2} x ${paperHeight2} ซม.) มี waste น้อยกว่า</p>`;
    } else {
        resultHTML += '<p class="recommendation">ทั้งสองตัวเลือกมี waste เท่ากัน คุณสามารถเลือกตัวเลือกใดก็ได้</p>';
    }

    document.getElementById('result').innerHTML = resultHTML;

    // Draw layout masters
    drawLayoutMaster('canvas1', bagWidth, bagHeight, bagDepth, paperWidth1, paperHeight1, result1);
    drawLayoutMaster('canvas2', bagWidth, bagHeight, bagDepth, paperWidth2, paperHeight2, result2);
}
